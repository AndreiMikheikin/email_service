name: Деплой продакшен окружения с SSR

on:
  push:
    branches: [master]
    paths:
      - 'apps/admin-spa/**'
      - 'apps/client-spa/**'
      - 'src/**'
      - '.github/workflows/deploy.yml'

env:
  NODE_ENV: production
  SSH_HOST: 178.250.247.67
  DEPLOY_DIR: /root/email-service
  WEB_ROOT: /var/www/email-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    # ----------------------------
    # 1. ПОДГОТОВКА РЕПОЗИТОРИЯ
    # ----------------------------
    - name: Загрузка кода
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    # ----------------------------
    # 2. НАСТРОЙКА ОКРУЖЕНИЯ
    # ----------------------------
    - name: Установка Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: |
          apps/admin-spa/package-lock.json
          apps/client-spa/package-lock.json

    # ----------------------------
    # 3. УСТАНОВКА ЗАВИСИМОСТЕЙ
    # ----------------------------
    - name: Установка корневых зависимостей
      run: npm ci --ignore-scripts

    - name: Установка зависимостей admin-spa
      working-directory: apps/admin-spa
      run: |
        npm ci --include=dev
        npm list --depth=0 || true

    - name: Установка зависимостей client-spa
      working-directory: apps/client-spa
      run: |
        npm ci --include=dev
        npm list vite || echo "⚠️ Vite не установлен"

    # ----------------------------
    # 4. СБОРКА ПРОЕКТОВ
    # ----------------------------
    - name: Сборка admin-spa (SSR)
      working-directory: apps/admin-spa
      run: |
        npm run build:client
        npm run build:server
        [ -f dist/client/index.html ] || { echo "❌ Отсутствует index.html"; exit 1; }
        [ -f dist/server/entry-server.js ] || { echo "❌ Отсутствует entry-server.js"; exit 1; }

    - name: Сборка client-spa (SPA)
      working-directory: apps/client-spa
      run: |
        npm run build
        [ -f dist/index.html ] || { echo "❌ Отсутствует index.html"; exit 1; }

    # ----------------------------
    # 5. ПОДГОТОВКА АРТЕФАКТОВ
    # ----------------------------
    - name: Упаковка артефактов
      run: |
        rm -rf artifact && mkdir -p artifact/{core,admin-spa,client-spa}
        cp -r src sql package*.json ecosystem.config.cjs artifact/core/
        cp apps/admin-spa/{server.js,package*.json,.env*} artifact/admin-spa/ 2>/dev/null || true
        cp -r apps/admin-spa/dist artifact/admin-spa/
        cp -r apps/client-spa/dist artifact/client-spa/
        cp apps/client-spa/{package*.json,.env*} artifact/client-spa/ 2>/dev/null || true
        tree artifact -L 3 || true

    # ----------------------------
    # 6. НАСТРОЙКА SSH
    # ----------------------------
    - name: Настройка SSH подключения
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    # ----------------------------
    # 7. ДЕПЛОЙ НА СЕРВЕР
    # ----------------------------
    - name: Деплой core
      run: |
        rsync -avz --delete artifact/core/ root@$SSH_HOST:$DEPLOY_DIR/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR
          npm ci --production --ignore-scripts
        "

    - name: Деплой admin-spa
      run: |
        rsync -avz --delete artifact/admin-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/admin-spa/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR/apps/admin-spa
          npm ci --production
          [ -f .env.production ] && cp .env.production .env || true
        "

    - name: Деплой client-spa
      run: |
        rsync -avz --delete artifact/client-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/client-spa/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR/apps/client-spa
          npm ci --production
          [ -f .env.production ] && cp .env.production .env || true
        "

    # ----------------------------
    # 8. НАСТРОЙКА ПРОДАКШЕНА
    # ----------------------------
    - name: Настройка окружения и запуск
      run: |
        ssh root@$SSH_HOST "
          mkdir -p $WEB_ROOT/admin-spa $WEB_ROOT/client-spa
          rsync -a --delete $DEPLOY_DIR/apps/admin-spa/dist/client/ $WEB_ROOT/admin-spa/
          rsync -a --delete $DEPLOY_DIR/apps/client-spa/dist/ $WEB_ROOT/client-spa/
          chown -R www-data:www-data $WEB_ROOT
          find $WEB_ROOT -type d -exec chmod 755 {} \;
          find $WEB_ROOT -type f -exec chmod 644 {} \;
          if [ -f $DEPLOY_DIR/src/jobs/compress-static.js ]; then
            echo 'Сжимаем статику...'
            node $DEPLOY_DIR/src/jobs/compress-static.js 4 --yes
          fi
          pm2 delete admin-spa-ssr || true
          cd $DEPLOY_DIR/apps/admin-spa
          pm2 start server.js --name admin-spa-ssr --time --log-date-format='YYYY-MM-DD HH:mm:ss'
          pm2 save
          systemctl restart nginx
        "

    # ----------------------------
    # 9. ПРОВЕРКА РАБОТОСПОСОБНОСТИ
    # ----------------------------
    - name: Проверка деплоя
      run: |
        ssh root@$SSH_HOST "
          echo '=== PM2 ==='
          pm2 list
          echo '=== Веб ассеты ==='
          ls -la $WEB_ROOT/admin-spa/assets/ | head -5
          echo '=== SSR healthcheck ==='
          curl --retry 3 --retry-delay 5 -s http://localhost:3344/ || echo '⚠️ SSR не отвечает'
        "

    # ----------------------------
    # 10. УДАЛЕНИЕ SSH КЛЮЧА
    # ----------------------------
    - name: Очистка SSH ключа на CI
      if: always()
      run: rm -f ~/.ssh/id_rsa