name: Deploy Production Stack with SSR

on:
  push:
    branches: [master]
    paths:
      - 'apps/admin-spa/**'
      - 'apps/client-spa/**'
      - 'src/**'
      - '.github/workflows/deploy.yml'

env:
  NODE_ENV: production
  SSH_HOST: 178.250.247.67
  DEPLOY_DIR: /root/email-service
  WEB_ROOT: /var/www/email-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    # ----------------------------
    # 1. ПОДГОТОВКА РЕПОЗИТОРИЯ
    # ----------------------------
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    # ----------------------------
    # 2. НАСТРОЙКА СРЕДЫ
    # ----------------------------
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: |
          apps/admin-spa/package-lock.json
          apps/client-spa/package-lock.json

    - name: Verify environment
      run: |
        node -v
        npm -v
        ls -la apps/admin-spa/

    # ----------------------------
    # 3. УСТАНОВКА ЗАВИСИМОСТЕЙ
    # ----------------------------
    - name: Install root dependencies
      run: npm ci --ignore-scripts

    - name: Install admin-spa (SSR) dependencies
      working-directory: apps/admin-spa
      run: |
        npm ci
        # Проверяем что react-dom правильной версии
        if ! npm list react-dom@18.2.0; then
          npm install react-dom@18.2.0
        fi
        npm list --depth=0

    - name: Install client-spa dependencies
      working-directory: apps/client-spa
      run: npm ci

    # ----------------------------
    # 4. СБОРКА ПРОЕКТОВ
    # ----------------------------
    - name: Build admin-spa (SSR)
      working-directory: apps/admin-spa
      run: |
        npm run build:client
        npm run build:server
        
        # Verify critical SSR files
        [ -f dist/client/index.html ] || { echo "Missing client index.html"; exit 1; }
        [ -f dist/server/entry-server.js ] || { echo "Missing server entry"; exit 1; }
        ls -la dist/server/

    - name: Build client-spa (SPA)
      working-directory: apps/client-spa
      run: |
        npm run build
        [ -f dist/index.html ] || exit 1

    # ----------------------------
    # 5. ПОДГОТОВКА АРТЕФАКТОВ
    # ----------------------------
    - name: Package deployment artifacts
      run: |
        mkdir -p artifact/{core,admin-spa,client-spa}
        
        # Core service
        cp -r src sql package*.json ecosystem.config.cjs artifact/core/
        
        # Admin SPA (SSR)
        cp apps/admin-spa/{server.js,package*.json,.env*} artifact/admin-spa/ 2>/dev/null || true
        cp -r apps/admin-spa/dist artifact/admin-spa/
        
        # Client SPA
        cp -r apps/client-spa/dist artifact/client-spa/
        cp apps/client-spa/{package*.json,.env*} artifact/client-spa/ 2>/dev/null || true
        
        # Verify artifact structure
        tree artifact -L 3

    # ----------------------------
    # 6. НАСТРОЙКА SSH
    # ----------------------------
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}


    # ----------------------------
    # 7. ДЕПЛОЙ НА СЕРВЕР
    # ----------------------------
    - name: Deploy core service
      run: |
        rsync -avz --delete artifact/core/ root@$SSH_HOST:$DEPLOY_DIR/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR
          npm ci --production --ignore-scripts
        "

    - name: Deploy admin-spa (SSR)
      run: |
        rsync -avz --delete artifact/admin-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/admin-spa/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR/apps/admin-spa
          npm ci --production
          [ -f .env.production ] && cp .env.production .env || true
        "

    - name: Deploy client-spa
      run: |
        rsync -avz --delete artifact/client-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/client-spa/
        ssh root@$SSH_HOST "
          cd $DEPLOY_DIR/apps/client-spa
          npm ci --production
          [ -f .env.production ] && cp .env.production .env || true
        "

    # ----------------------------
    # 8. НАСТРОЙКА ПРОДКШЕНА
    # ----------------------------
    - name: Configure production environment
      run: |
        ssh root@$SSH_HOST "
          # Setup web directories
          mkdir -p $WEB_ROOT/{admin-spa,client-spa}
          
          # Copy SSR client assets
          rsync -a --delete $DEPLOY_DIR/apps/admin-spa/dist/client/ $WEB_ROOT/admin-spa/
          
          # Copy SPA assets
          rsync -a --delete $DEPLOY_DIR/apps/client-spa/dist/ $WEB_ROOT/client-spa/
          
          # Permissions
          chown -R www-data:www-data $WEB_ROOT
          find $WEB_ROOT -type d -exec chmod 755 {} \;
          find $WEB_ROOT -type f -exec chmod 644 {} \;
          
          # PM2 Process Management
          pm2 delete admin-spa-ssr || true
          cd $DEPLOY_DIR/apps/admin-spa
          pm2 start server.js --name admin-spa-ssr --time
          pm2 save
          
          # Restart services
          systemctl restart nginx
          
          # Verify
          pm2 list
          systemctl status nginx
          curl -I http://localhost:3344/admin-spa/health
        "

        # ----------------------------
    # 9. НАСТРОЙКА ПРОДКШЕНА И СЖАТИЕ
    # ----------------------------
    - name: Configure production and compress
      run: |
        ssh root@$SSH_HOST "
          # Настройка web-директорий
          mkdir -p $WEB_ROOT/{admin-spa,client-spa}
          
          # Копирование ассетов
          rsync -a --delete $DEPLOY_DIR/apps/admin-spa/dist/client/ $WEB_ROOT/admin-spa/
          rsync -a --delete $DEPLOY_DIR/apps/client-spa/dist/ $WEB_ROOT/client-spa/
          
          # Права доступа
          chown -R www-data:www-data $WEB_ROOT
          find $WEB_ROOT -type d -exec chmod 755 {} \;
          find $WEB_ROOT -type f -exec chmod 644 {} \;
          
          # Запуск вашего скрипта сжатия с параметрами
          echo 'Запуск кастомного сжатия статики...'
          node $DEPLOY_DIR/src/jobs/compress-static.js 4 --yes
          echo 'Сжатие завершено. Результат:'
          ls -la $WEB_ROOT/admin-spa/assets/*.gz | head -5
          
          # Управление процессами
          pm2 delete admin-spa-ssr || true
          cd $DEPLOY_DIR/apps/admin-spa
          pm2 start server.js --name admin-spa-ssr --time
          pm2 save
          
          # Перезапуск сервисов
          systemctl restart nginx
        "

    # ----------------------------
    # 10. ПРОВЕРКА РЕЗУЛЬТАТОВ
    # ----------------------------
    - name: Verify deployment
      run: |
        ssh root@$SSH_HOST "
          # Проверка сжатых файлов
          echo 'Проверка сжатых ассетов:'
          find $WEB_ROOT -name '*.gz' | wc -l
          
          # Проверка SSR
          echo 'Проверка здоровья SSR:'
          curl -s http://localhost:3344/admin-spa/health | jq .
          
          # Проверка статики
          echo 'Проверка статических файлов:'
          curl -I http://localhost/admin-spa/assets/index-*.js | grep -E 'HTTP|Content-Encoding'
          
          # Логи процессов
          echo 'Последние логи PM2:'
          pm2 logs admin-spa-ssr --lines 10 | grep -v 'DEBUG'
          echo 'Последние ошибки Nginx:'
          journalctl -u nginx --since '2 minutes ago' | grep -i error || echo 'Ошибок нет'
        "