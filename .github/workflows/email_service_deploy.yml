name: Деплой продакшен окружения с SSR

on:
  push:
    branches: [master]
    paths:
      - 'apps/admin-spa/**'
      - 'apps/client-spa/**'
      - 'src/**'
      - '.github/workflows/deploy.yml'

env:
  NODE_ENV: production
  SSH_HOST: ${ secrets.SSH_HOST }
  DEPLOY_DIR: /root/email-service
  WEB_ROOT: /var/www/email-service
  PM2_APP_NAME: admin-spa-ssr

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    # ----------------------------
    # 1. ИНИЦИАЛИЗАЦИЯ
    # ----------------------------
    - name: Загрузка кода
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    # ----------------------------
    # 2. НАСТРОЙКА ОКРУЖЕНИЯ
    # ----------------------------
    - name: Установка Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: |
          apps/admin-spa/package-lock.json
          apps/client-spa/package-lock.json

    # ----------------------------
    # 3. УСТАНОВКА ЗАВИСИМОСТЕЙ
    # ----------------------------
    - name: Установка зависимостей
      run: |
        echo "Установка корневых зависимостей..."
        npm ci --ignore-scripts
        
        echo "Установка admin-spa..."
        cd apps/admin-spa && npm ci --include=dev && cd ../..
        
        echo "Установка client-spa..."
        cd apps/client-spa && npm ci --include=dev && cd ../..

    # ----------------------------
    # 4. СБОРКА ПРОЕКТОВ
    # ----------------------------
    - name: Сборка проектов
      run: |
        echo "Сборка admin-spa (SSR)..."
        cd apps/admin-spa
        npm run build:client && npm run build:server
        [ -f dist/client/index.html ] || { echo "❌ Отсутствует index.html"; exit 1; }
        [ -f dist/server/entry-server.js ] || { echo "❌ Отсутствует entry-server.js"; exit 1; }
        cd ../..
        
        echo "Сборка client-spa (SPA)..."
        cd apps/client-spa
        npm run build
        [ -f dist/index.html ] || { echo "❌ Отсутствует index.html"; exit 1; }
        cd ../..

    # ----------------------------
    # 5. ПОДГОТОВКА АРТЕФАКТОВ
    # ----------------------------
    - name: Создание артефактов
      run: |
        mkdir -p artifact/{core,admin-spa,client-spa}
        
        # Копирование core
        cp -r src sql migrations package*.json .env.example artifact/core/
        
        # Подготовка admin-spa
        cp apps/admin-spa/{server.js,package*.json,.env*} artifact/admin-spa/ 2>/dev/null || true
        cp -r apps/admin-spa/dist artifact/admin-spa/
        
        # Подготовка client-spa
        cp -r apps/client-spa/dist artifact/client-spa/
        cp apps/client-spa/{package*.json,.env*} artifact/client-spa/ 2>/dev/null || true
        
        # Проверка структуры
        tree artifact -L 3

    # ----------------------------
    # 6. НАСТРОЙКА SSH
    # ----------------------------
    - name: Конфигурация SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    # ----------------------------
    # 7. ДЕПЛОЙ НА СЕРВЕР
    # ----------------------------
    - name: Развертывание на сервере
      run: |
        # Деплой core
        rsync -az --delete --progress artifact/core/ root@$SSH_HOST:$DEPLOY_DIR/
        
        # Деплой admin-spa
        rsync -az --delete --progress artifact/admin-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/admin-spa/
        
        # Деплой client-spa
        rsync -az --delete --progress artifact/client-spa/ root@$SSH_HOST:$DEPLOY_DIR/apps/client-spa/
        
        # Установка зависимостей на сервере
        ssh root@$SSH_HOST "
          set -e
          echo 'Установка core зависимостей...'
          cd $DEPLOY_DIR && npm ci --production --ignore-scripts
          
          echo 'Установка admin-spa зависимостей...'
          cd $DEPLOY_DIR/apps/admin-spa && npm ci --production
          
          echo 'Установка client-spa зависимостей...'
          cd $DEPLOY_DIR/apps/client-spa && npm ci --production
        "

    # ----------------------------
    # 8. НАСТРОЙКА ПРОДАКШЕНА
    # ----------------------------
    - name: Запуск приложений
      run: |
        ssh root@$SSH_HOST "
          set -e
          echo 'Настройка веб-корня...'
          mkdir -p $WEB_ROOT/{admin-spa,client-spa}
          rsync -a --delete $DEPLOY_DIR/apps/admin-spa/dist/client/ $WEB_ROOT/admin-spa/
          rsync -a --delete $DEPLOY_DIR/apps/client-spa/dist/ $WEB_ROOT/client-spa/
          
          echo 'Установка прав...'
          chown -R www-data:www-data $WEB_ROOT
          find $WEB_ROOT -type d -exec chmod 755 {} \;
          find $WEB_ROOT -type f -exec chmod 644 {} \;
          
          echo 'Запуск SSR сервера...'
          pm2 delete $PM2_APP_NAME || true
          cd $DEPLOY_DIR/apps/admin-spa
          pm2 start server.js --name $PM2_APP_NAME --time --log-date-format='YYYY-MM-DD HH:mm:ss'
          pm2 save
          
          echo 'Перезапуск nginx...'
          systemctl restart nginx
        "

    # ----------------------------
    # 9. ВАЛИДАЦИЯ ДЕПЛОЯ
    # ----------------------------
    - name: Проверка работоспособности
      run: |
        ssh root@$SSH_HOST "
          echo '=== Статус PM2 ==='
          pm2 list
          
          echo '=== Проверка статики ==='
          ls -la $WEB_ROOT/admin-spa/assets/ | head -5
          [ -f $WEB_ROOT/admin-spa/assets/index-*.js ] || echo '⚠️ JS файлы не найдены'
          
          echo '=== Healthcheck SSR ==='
          curl -sSf http://localhost:3344/admin-spa/ >/dev/null || echo '❌ SSR не отвечает'
          
          echo '=== Проверка клиентского SPA ==='
          [ -f $WEB_ROOT/client-spa/index.html ] || echo '⚠️ Client SPA не развернут'
        "

    # ----------------------------
    # 10. ЗАВЕРШЕНИЕ
    # ----------------------------
    - name: Очистка
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa
        echo "Деплой завершен"